// <auto-generated />
using System;
using HotelBookingsWeb.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingsWeb.Migrations
{
    [DbContext(typeof(AirBnbContext))]
    [Migration("20221011212725_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelBookingsWeb.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExtraDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelInfoId");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.HotelInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfRooms")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HotelInfoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "NY",
                            HotelName = "NYC",
                            NumberOfRooms = 500
                        },
                        new
                        {
                            Id = 2,
                            City = "NY",
                            HotelName = "New Hotel",
                            NumberOfRooms = 500
                        },
                        new
                        {
                            Id = 3,
                            City = "NY",
                            HotelName = "My Hotel",
                            NumberOfRooms = 500
                        },
                        new
                        {
                            Id = 4,
                            City = "NY",
                            HotelName = "Cal Hotel",
                            NumberOfRooms = 500
                        });
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Landlords");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LandlordId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookingDays")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HotelInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalCharges")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HotelInfoId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PricePerNight")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "R - 001",
                            PricePerNight = 200.0,
                            Size = "20x20"
                        },
                        new
                        {
                            Id = 2,
                            Number = "R - 002",
                            PricePerNight = 500.0,
                            Size = "20x20"
                        },
                        new
                        {
                            Id = 3,
                            Number = "R - 003",
                            PricePerNight = 100.0,
                            Size = "20x20"
                        },
                        new
                        {
                            Id = 4,
                            Number = "R - 004",
                            PricePerNight = 300.0,
                            Size = "20x20"
                        });
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.System_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("System_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contact = "111-333-1212",
                            Email = "admin@mail.com",
                            FullName = "Admin",
                            Password = "123",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Contact = "11121-333-1212",
                            Email = "admin1@mail.com",
                            FullName = "Admin 1",
                            Password = "123",
                            Role = "admin",
                            Username = "admin1"
                        });
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Extra", b =>
                {
                    b.HasOne("HotelBookingsWeb.Model.HotelInfo", "HotelInfo")
                        .WithMany("Extras")
                        .HasForeignKey("HotelInfoId");

                    b.Navigation("HotelInfo");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Property", b =>
                {
                    b.HasOne("HotelBookingsWeb.Model.Landlord", "Landlord")
                        .WithMany("Properties")
                        .HasForeignKey("LandlordId");

                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Reservation", b =>
                {
                    b.HasOne("HotelBookingsWeb.Model.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId");

                    b.HasOne("HotelBookingsWeb.Model.HotelInfo", "HotelInfo")
                        .WithMany("Bookings")
                        .HasForeignKey("HotelInfoId");

                    b.HasOne("HotelBookingsWeb.Model.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId");

                    b.Navigation("Customer");

                    b.Navigation("HotelInfo");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.HotelInfo", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Extras");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Landlord", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("HotelBookingsWeb.Model.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
